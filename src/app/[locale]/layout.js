import { Roboto } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/layout/Navbar";
import Footer from "@/components/layout/Footer";
import {  hasLocale, NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
import { getMessages } from "next-intl/server";
import { routing } from "@/i18n/routing";

const roboto = Roboto({
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});

const fetchSpecializations = async () => {
  try {
    const response = await fetch(`${process.env.NEXT_PUBLIC_API_BASE_URL}/api/Specialization/all`, {
      cache: 'force-cache'
    });
    if (!response.ok) {
      throw new Error('Failed to fetch specializations');
    }
    const data = await response.json();
    return data
      .filter(specialization => specialization.id && specialization.name)
      .map((specialization, index) => ({
        value: specialization.id,
        label: specialization.name,
        key: `specialization-${specialization.id}-${index}`
      }));
  } catch (error) {
    console.error('Error fetching specializations:', error);
    return [];
  }
};

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
export default async function RootLayout({ children, params }) {
  const {locale} = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  
  const specializations = await fetchSpecializations();
  
  return (
    <html lang="en">
      <body className={`${roboto.className} antialiased px-[10px] md:[20px]` }>
        <NextIntlClientProvider>
          <Navbar specializations={specializations} />
          {children}
          <Footer />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
